//--------------------------------------------------------------
//	Gravity Forms adapted from: https://github.com/WebDevStudios/wd_s
//
//
//	MIXINS FROM NEAT
//	BASE STYLES
//	FORM HEADER
//	FORM FOOTER
//	CONFIRMATION MESSAGE
//	SELECTS
// 	CHOSEN SELECT
//	CONTENT OVERRIDES
//--------------------------------------------------------------

//--------------------------------------------------------------
//	LOCAL VARIABLES
//--------------------------------------------------------------

// Form
$gf-padding: 0; // set outer padding on form
$gf-bg: $white; // background color of form
$gf-border-width: 0; // border-width on form
$gf-border-color: $white; // border color

// Fields / Rows
$gf-field-margin-bottom: $base-gap; // margin between field and label below (vertical spacing between rows)

// Labels
$gf-label-font-size: 1em;
$gf-label-font-color: $darkgrey;
$gf-label-font-weight: 700;

// Inputs
$gf-input-color-background: $white;
$gf-input-color-border: $grey;
$gf-input-color-text: $offblack;
$gf-input-color-focus-text: $offblack;
$gf-input-padding: 0.25em;


//--------------------------------------------------------------
//	MIXINS FROM NEAT
//--------------------------------------------------------------

@mixin triangle(
    $direction: up,
    $color: currentColor,
    $width: 1rem,
    $height: ($width / 2)
  ) {
  @if not index(
      "up" "up-right" "right" "down-right" "down" "down-left" "left" "up-left",
      $direction
    ) {
    @error "Direction must be `up`, `up-right`, `right`, `down-right`, " +
           "`down`, `down-left`, `left` or `up-left`.";
  } @else if not _is-color($color) {
    @error "`#{$color}` is not a valid color for the `$color` argument in " +
           "the `triangle` mixin.";
  } @else {
    border-style: solid;
    height: 0;
    width: 0;

    @if $direction == "up" {
      border-color: transparent transparent $color;
      border-width: 0 ($width / 2) $height;
    } @else if $direction == "up-right" {
      border-color: transparent $color transparent transparent;
      border-width: 0 $width $width 0;
    } @else if $direction == "right" {
      border-color: transparent transparent transparent $color;
      border-width: ($height / 2) 0 ($height / 2) $width;
    } @else if $direction == "down-right" {
      border-color: transparent transparent $color;
      border-width: 0 0 $width $width;
    } @else if $direction == "down" {
      border-color: $color transparent transparent;
      border-width: $height ($width / 2) 0;
    } @else if $direction == "down-left" {
      border-color: transparent transparent transparent $color;
      border-width: $width 0 0 $width;
    } @else if $direction == "left" {
      border-color: transparent $color transparent transparent;
      border-width: ($height / 2) $width ($height / 2) 0;
    } @else if $direction == "up-left" {
      border-color: $color transparent transparent;
      border-width: $width $width 0 0;
    }
  }
}

@mixin position(
    $position,
    $box-edge-values
  ) {

  $box-edge-values: _unpack-shorthand($box-edge-values);

  $offsets: (
    top:    nth($box-edge-values, 1),
    right:  nth($box-edge-values, 2),
    bottom: nth($box-edge-values, 3),
    left:   nth($box-edge-values, 4),
  );

  position: $position;

  @each $offset, $value in $offsets {
    @if _is-length($value) {
      #{$offset}: $value;
    }
  }
}

@function _unpack-shorthand($shorthand) {
  @if length($shorthand) == 1 {
    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);
  } @else if length($shorthand) == 2 {
    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);
  } @else if length($shorthand) == 3 {
    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);
  } @else {
    @return $shorthand;
  }
}

@function _is-length($value) {
  @return type-of($value) != "null" and (str-slice($value + "", 1, 4) == "calc"
       or index(auto inherit initial 0, $value)
       or (type-of($value) == "number" and not(unitless($value))));
}



//--------------------------------------------------------------
//	BASE STYLES
//--------------------------------------------------------------
.gform_wrapper { // the entire form
	background: $gf-bg; // background for the form
	border: $gf-border-width solid $gf-border-color; // outer form border
	padding: $gf-padding; // form padding

	// Single and two-column fields
	&.gform_body .gform_fields .gfield,
	&.gform_body .gform_fields .gfield.gf_left_half,
	&.gform_body .gform_fields .gfield.gf_right_half {
		margin-bottom: $gf-field-margin-bottom; // space between input and label below
	} // &.gform_body .gform_fields .gfield, &.gform_body .gform_fields .gfield.gf_left_half, &.gform_body .gform_fields .gfield.gf_right_half

	// Labels
	.gfield_label {
		color: $gf-label-font-color;
		font-size: $gf-label-font-size;
		font-weight: $gf-label-font-weight;

		// Require field Indicator (Asterisk)
		.gfield_required {
      color: $red;
		} // .gfield_required
	} // .gfield_label

	// Standard fields
	input[type="text"],
	input[type="url"],
	input[type="email"],
	input[type="tel"],
	input[type="number"],
	input[type="password"],
	input[type="file"],
	textarea {
		background: $gf-input-color-background;
	} // input[type="text"], input[type="url"], input[type="email"], input[type="tel"], input[type="number"], input[type="password"], input[type="file"], textarea

	textarea {
		width: 100%;
	} // textarea

	// Default Drop-Down (Select) Field
	// Feel free to change the svg icon being used
	select {
		-webkit-appearance: none;
		background: url("assets/images/svg-icons/caret-down.svg") no-repeat 97% transparent;
		background-color: $gf-input-color-background;
		background-size: rem(12);
		border-color: $gf-input-color-border;
		border-radius: 0;
		line-height: 1.45;
		padding: $gf-input-padding;
		width: 100%;

		@include break-over(600px) {
			width: 49%;
		}
	} // select

	// Remove icon for default multi-select
	select[multiple="multiple"] {
		background: $gf-input-color-background;
	} // select[multiple="multiple"]
} // .gform_wrapper

//--------------------------------------------------------------
// 	FORM HEADER
//--------------------------------------------------------------
.gform_wrapper .gform_heading {
	// .gform_title - form title
	// .gform_description - form description
} // .gform_wrapper .gform_heading

//--------------------------------------------------------------
// 	FORM FOOTER
//--------------------------------------------------------------
.gform_wrapper .gform_footer {

	input.button,
	input[type="submit"] {
		// This will target submit buttons
	} // input.button, input[type="submit"]
} // .gform_wrapper .gform_footer

//--------------------------------------------------------------
//	CONFIRMATION MESSAGE (SUCCESSFUL AJAX SUBMISSION)
//--------------------------------------------------------------
.gforms_confirmation_message { // container element
	// .gform_confirmation_wrapper - the message wrapper
	// .gform_confirmation_message - message div
} // .gforms_confirmation_message

//--------------------------------------------------------------
//	SELECTS
//--------------------------------------------------------------
.gform_wrapper .gform_body .gform_fields .gfield select,
.gform_wrapper.gf_browser_chrome .gform_body .gform_fields .gfield select {
	margin-left: 0;
	width: 100% !important; // overrides GF !important

	@include break-over(600px) {
		width: 49% !important;
	}
} // .gform_wrapper .gform_body .gform_fields .gfield select, .gform_wrapper.gf_browser_chrome .gform_body .gform_fields .gfield select

//--------------------------------------------------------------
//	CHOSEN SELECT
//--------------------------------------------------------------
.gform_wrapper .gfield .chosen-container-single {
	font-size: rem(16);

	// Link holding initial selection - what user first sees
	.chosen-single {
		background: $gf-input-color-background;
		border-color: $gf-input-color-border;
		border-radius: 0;
		height: auto;
		padding: $gf-input-padding;
	} // .chosen-single

	// Default state of icon for select
	.chosen-single div b {
		@include position(absolute, 40% rem(11) null null);
		@include triangle(down, $gf-input-color-border, 12px); // adjust size and color

		background: none; // hide the default chosen background
	} // .chosen-single div b

	// Selections drop-down
	.chosen-drop {

		// Search box by default has a small magnifying icon on right
		.chosen-search input[type="text"] {
			background: none;
		} // .chosen-search input[type="text"]

		// Search results list
		.chosen-results li {
			padding: rem(10) rem(5);
		} // .chosen-results li
	} // .chosen-drop

	// For styling the icon when select is active
	&.chosen-container-single.chosen-with-drop {

		.chosen-single {
			background-image: none;
		} // .chosen-single

		.chosen-single div b {
			@include triangle(up, $gf-input-color-border, 12px); // adjust size and color for active icon

			border: none; // hiding the previous triangle (border)
		} // .chosen-single div b
	} // &.chosen-container-single.chosen-with-drop
} // .gform_wrapper .gfield .chosen-container-single

//--------------------------------------------------------------
//	CONTENT OVERRIDES
//--------------------------------------------------------------
#main .gform_wrapper {
	margin-right: 0; // allow for full width of containing element
	max-width: 100%; // allow for full width of containing element

	// Standard fields
	input[type="text"],
	input[type="url"],
	input[type="email"],
	input[type="tel"],
	input[type="number"],
	input[type="password"],
	input[type="file"],
	textarea {
		padding: $gf-input-padding;
		width: 100%;

		@include break-over(600px) {
			width: 49%;
		}
	} // input[type="text"], input[type="url"], input[type="email"], input[type="tel"], input[type="number"], input[type="password"], input[type="file"], textarea

	.chosen-search input[type="text"],
	textarea {
		width: 100%;
	} // .chosen-search input[type="text"], textarea

	// Validation error message (displays at top of form)
	.validation_error {

	} // .validation_error

	// Error labels (required fields)
	.gfield_error {
		// .gfield_label - error label
		// .validation_message - required error text
	} // .gfield_error

	// Two-column fields
	.gf_left_half,
	.gf_right_half {
		width: 100%;

		// Inputs
		input[type="text"],
		input[type="url"],
		input[type="email"],
		input[type="tel"],
		input[type="number"],
		input[type="password"],
		input[type="file"] {

			@include break-over(600px) {
				width: 100%;
			}
		} // input[type="text"], input[type="url"], input[type="email"], input[type="tel"], input[type="number"], input[type="password"], input[type="file"]

		@include break-over(600px) {
			width: 49%;
		}
	} // .gf_left_half, .gf_right_half

	// Target just left column on two-column row
	.gf_left_half {

		@include break-over(600px) {
			margin-right: 2%;
		}
	} // .gf_left_half

	// Advanced fields
	// https://www.gravityhelp.com/documentation/article/css-targeting-examples/#advanced-fields
	.ginput_complex {

		.name_first input[type="text"],
		.name_last input[type="text"] {
			width: 100%;
		} // .name_first input[type="text"], .name_last input[type="text"]
	} // .ginput_complex
} // #content .gform_wrapper
